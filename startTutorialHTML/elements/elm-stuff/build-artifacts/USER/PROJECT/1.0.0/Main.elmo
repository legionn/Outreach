Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values)
   return _elm.Main.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Main",
   $Color = Elm.Color.make(_elm),
   $Graphics$Collage = Elm.Graphics.Collage.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Window = Elm.Window.make(_elm);
   var main = A2($Signal.map,
   function (_v0) {
      return function () {
         switch (_v0.ctor)
         {case "_Tuple2":
            return A3($Graphics$Collage.collage,
              _v0._0,
              _v0._1,
              _L.fromArray([A2($Graphics$Collage.filled,
                           $Color.red,
                           $Graphics$Collage.circle(15))
                           ,A2($Graphics$Collage.filled,
                           $Color.blue,
                           $Graphics$Collage.square(20))]));}
         _U.badCase($moduleName,
         "on line 7, column 30 to 91");
      }();
   },
   $Window.dimensions);
   _elm.Main.values = {_op: _op
                      ,main: main};
   return _elm.Main.values;
};